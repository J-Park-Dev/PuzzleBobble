/*
2019.11.14 16:40
collision handling이 끝났으니까 board ball 에다가 넣거나 drop 검사를 하는 것을 구현 해야 한다.
*/

// 11.15 문제 : space 계속 눌렀을 때 공이 껴버리는 현상.
// 11.17 문제 : 세번째줄 가운데 공이 안들어가는듯?
// https://stackoverflow.com/questions/6273275/how-to-reclaim-memory-after-glutmainloop-is-activated
// 11.18(오전) 문제 : 11.17 문제의 확장
// drop 하고나서 gameover issue, time bar 이런 잡다한거.

/*
2019.11.20 Ver 1.20
	*Texture 메모리 문제 해결
	https://gogorchg.tistory.com/entry/Android-Opengl-텍스쳐-변경-시
	*LaserPath 기능 추가
	*SPEED가 크면 공과 레이저 경로가 약간 다른 문제 발생
	-> SPEED를 10으로 낮추고 프레임을 120으로 올려서 해결. 공 빠르기는 그대로
	*main에 있던 매크로들을 control.h로 이동. control에서 속도, fps등을 조절할 수 있게
*/
/*
2019.11.21 Ver 1.21
	*마지막 줄에 같은 색 공 두개가 있을 때, 그곳에 세번째 같은 색 공을 쏴서 인덱스가 11이 되면 게임오버가 되는 문제가 있었다.
	원래는 게임오버가 되면 안되고 그 공들이 없어져야 한다.
	현재는 정상적으로 수정됨
	이를 위해 board_balls의 행을 하나 추가하고,
		board_balls를 탐색하는 for문의 조건을 for(int i=0; i<12; i++)로, i가 11일 때까지 탐색하는 것으로 바꿨다.
	*게임 시작화면에서 엔터키보다 스페이스바를 먼저 누르면 공이 안 생기는 버그가 있어서 해결함
	*같은 색이 연속 세번 나오는 경우를 막음
*/
/*
2019.11.23 Ver 1.23.0
	*기존의 Texture.h를 클래스로 바꿈. Object 하나당 배경 하나가 대응되도록. 이렇게 하는게 객체지향에 더 맞는 것 같음.
		이를 위해 Vector<Texture> tex 를 선언. 배경들을 벡터에 push_back
	*시작화면 배경 추가 (우주 테마, 포토샵으로 제작)
	*기존의 displayOn 변수를 dark 변수로 바꾸고, On, Off에 따라 다크모드 실행. 다크 모드 실행시에는 우주 배경이 나오게
	*[ ] 키로 1도 단위 세밀한 각도 조절 기능을 추가. 이를 위해 Arrow::move_left, Arrow::move_right 함수에 int형 파라미터를 추가
	*시작 화면에서 글자를 깜빡이게 함. 코드 참고
*/
/*
2019.11.23 Ver 1.23.1
	*배경음, 발사음, 폭발음 추가. irrKlang 라이브러리 사용
*/
/*
2019.11.24 Ver 1.24
	*게임 오버가 된 이후에는 스페이스바 인식을 막음
	*파일에서 입력받아서 board_balls 초기화 (레벨시스템은 아님)
*/
/*
2019.11.25 Ver 1.25
	*시작할 때 보드가 랜덤으로 세팅되게 함. 텍스트파일에서 입력받는 함수도 구현(현재는 주석처리)
	*처음 보드에 있던 공을 모두 없애면 게임 클리어 (Control.h 에 cleared 변수와 clearMode 변수 추가. clearMode 변수는 파일 입력과정에서 실패했을때를 위해 추가했으나,
		랜덤으로 생성하는 경우에는 사용하지 않음.)
	*게임 오버 시, 초기 화면으로 돌아가는 기능 추가. 이 기능 사용시 게임을 리셋하는 함수를 만드는 것도 좋을 것 같다.
	*게임 클리어 시, 텍스쳐와 배경음 추가
	*reshape함수에서 좌표계 설정하는 것으로 변경
*/
/*
2019.11.26 Ver 1.26
	*idle() 함수 내부를 정리 (if문 조건)
	*board_balls를 탐색하는 이중 for문을 간소화 (10-(i%2))
	*함수 호출 등에서 enum Color type을 적극적으로 사용
	*콘솔 창에 instruction 표시
*/
/*
2019.11.27 Ver 1.27
	*restart 했을 때 텍스쳐를 불러오는 과정에서 memory leak 발생 (한번 restart 할 때마다 약 9 MB)
	*FreeImage_Unload()를 하지 않아서 생긴 것으로 확인됨
	*Texture 클래스에 destructor를 만들어서 그 안에서 unload를 시키고, restart 할 때마다 Texture 객체 포인터를 delete 시키는 것으로 해결
	*tex 벡터도 Texture 포인터를 담는 벡터로 바꿈 (원래는 Texture 객체를 담는 포인터였음)
*/
/*
2019.11.27 Ver 1.27.1
	*콘솔창에서 커서의 위치를 지정하는 gotoCursor() 함수를 만들어서 instruction() 함수의 문자열 출력에 사용. 속도를 위해 cout을 printf로 대체
	*스위치(laser, dark, sound)를 ON/OFF 할 때마다 콘솔창에서 해당하는 부분에 초록불이 들어오도록 설정.
		성능 저하를 막기 위해 키가 눌렸을 때에만 업데이트 되도록 ControlKey() 함수에서 instruction() 함수를 호출
*/
/*
2019.11.29 Ver 1.27.2
	*보드 디자인 완료. 보드 파일은 "board.dat" 라는 이름으로 저장했고, txt파일을 확장자만 바꾼 것이므로 메모장으로 편집 가능
*/
/*
2019.12.04 Ver 1.27.3
	*컴퓨터에 사운드 장치가 하나도 없는 경우 (ex. 현랩)
	engine = NULL 이 되면서 게임이 시작되지 않는 현상 발생
	해결을 위해 opening, maintheme, ending, cleartheme 변수의 초기화를 전역 위치가 아닌 init() 함수 내에서 처음 한번만 하도록 바꿈.
	이를 위해 init의 시작에서 static bool first 라는 변수를 추가.
	그리고 코드 내의 모든 사운드 관련 부분을 if(engine != NULL) 조건 속에 넣음. 이렇게 하면 사운드 장치가 없을 때는 사운드 관련 코드를 스킵한다.
*/